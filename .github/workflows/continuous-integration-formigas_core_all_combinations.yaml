name: formigas_core brick test all combinations

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        use_fvm: [true, false]
        use_ci: [None, GitHubActions, Gitlab Ci, Bitbucket Pipelines]
        use_material_3: [true, false]
        use_svg: [true, false]
        use_freezed: [true, false]
        state_management_solution: [BLoC, Formigas MVC]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.1

      - name: Install FVM
        if: matrix.use_fvm == true
        run: curl -fsSL https://fvm.app/install.sh | bash

      - name: Install Mason CLI
        run: dart pub global activate mason_cli

      - name: Initialize Mason
        run: mason init

      - name: Add formigas_core with Mason
        run: mason add formigas_core --path ./formigas_core

      # Remove these steps as soon as formigas_feature brick is public
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.FORMIGAS_VERSION_BUMPER_APP_ID }}
          private-key: ${{ secrets.FORMIGAS_VERSION_BUMPER_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: "formigas-flutter-bricks"
      - name: Configure PAT
        run: git config --global "url.https://x-access-token:${{ steps.app-token.outputs.token }}@github.com.insteadof" "https://github.com"

      - name: Make formigas formigas_core
        run: echo "my-runner-tag" | mason make formigas_core --project_name=my_app --org_name=com.example --description="App description" --use_fvm=${{ matrix.use_fvm }} --use_ci="${{ matrix.use_ci }}" --use_material_3=${{ matrix.use_material_3 }} --use_svg=${{ matrix.use_svg}} --use_freezed=${{ matrix.use_freezed}} --state_management_solution="${{ matrix.state_management_solution }}"

      - name: Run tests
        run: |
          if [[ ${{ matrix.use_fvm }} == true ]]; then
            fvm flutter test
          else
            flutter test
          fi
        working-directory: my_app

      - name: Verify .gitlab-ci.yml was created
        if: matrix.use_ci == 'Gitlab Ci'
        run: |
          if [[ hashFiles('.gitlab-ci.yml') == '' ]]; then
            exit 1
          else
            exit 0
          fi
        working-directory: my_app

      - name: Verify .bitbucket-pipelines.yml was created
        if: matrix.use_ci == 'Bitbucket Pipelines'
        run: |
          if [[ hashFiles('.bitbucket-pipelines.yml') == '' ]]; then
            exit 1
          else
            exit 0
          fi
        working-directory: my_app
